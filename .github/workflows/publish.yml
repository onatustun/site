name: Publish

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:
  schedule:
    - cron: "0 0 */29 * *"

permissions:
  contents: read
  deployments: write
  id-token: write
  pages: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Run the Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Check Flake
        run: >
          nix flake check
          --accept-flake-config
          --extra-experimental-features pipe-operators

      - name: Check Flake Inputs
        id: flakecheck
        uses: DeterminateSystems/flake-checker-action@main
        with:
          fail-mode: true
        continue-on-error: true

      - name: Update flake.lock if outdated
        id: update-lock
        if: steps.flakecheck.outcome == 'failure'
        run: >
          nix flake update
          --accept-flake-config
          --extra-experimental-features pipe-operators

      - name: Detect flake.lock changes
        id: detect-changes
        if: steps.update-lock.outcome == 'success'
        run: |
          if git diff --quiet flake.lock; then
            echo "updated=false" >> $GITHUB_OUTPUT
          else
            echo "updated=true" >> $GITHUB_OUTPUT
          fi

      - name: Check Flake (after update)
        if: steps.detect-changes.outputs.updated == 'true'
        run: >
          nix flake check
          --accept-flake-config
          --extra-experimental-features pipe-operators

      - name: Build Project via Flake
        run: >
          nix build .
          --accept-flake-config
          --extra-experimental-features pipe-operators

      - name: Upload artifact
        uses: actions/upload-pages-artifact@main
        with:
          path: ./result

      - name: Create PR for updated flake.lock
        if: steps.detect-changes.outputs.updated == 'true' && success() && github.ref == 'refs/heads/master'
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: |
            chore: update flake.lock (auto via CI)
          title: |
            Automated flake.lock update
          body: |
            Flake inputs were outdated and have been updated automatically.
          branch: |
            automated/flake-lock-update

  deploy-production:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@main
